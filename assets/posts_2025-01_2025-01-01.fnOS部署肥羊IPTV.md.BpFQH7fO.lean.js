import{_ as a,c as i,a0 as n,o as t}from"./chunks/framework.RVVD-68g.js";const g=JSON.parse('{"title":"飞牛NAS部署肥羊IPTV的allinone教程","description":"通过docker来部署iptv-web项目，docker容器创建，使用docker compose来配置","frontmatter":{"date":"2025-01-01T00:00:00.000Z","title":"飞牛NAS部署肥羊IPTV的allinone教程","category":"nas","tags":["飞牛nas","IPTV"],"description":"通过docker来部署iptv-web项目，docker容器创建，使用docker compose来配置"},"headers":[],"relativePath":"posts/2025-01/2025-01-01.fnOS部署肥羊IPTV.md","filePath":"posts/2025-01/2025-01-01.fnOS部署肥羊IPTV.md"}'),p={name:"posts/2025-01/2025-01-01.fnOS部署肥羊IPTV.md"};function e(l,s,h,k,r,o){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="飞牛nas部署肥羊iptv的allinone教程" tabindex="-1">飞牛NAS部署肥羊IPTV的allinone教程 <a class="header-anchor" href="#飞牛nas部署肥羊iptv的allinone教程" aria-label="Permalink to &quot;飞牛NAS部署肥羊IPTV的allinone教程&quot;">​</a></h1><p>通过docker来部署iptv-web项目，docker容器创建，使用docker compose来配置</p><p>docker-compose.yaml配置</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">services:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  av3a-assistant:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    image:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youshandefeiyang/av3a-assistant:amd64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 使用 youshandefeiyang/av3a-assistant 镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    container_name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> av3a-assistant</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # 容器名称为 av3a-assistant</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    privileged:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                            # 允许容器运行特权模式，提升容器权限</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    restart:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unless-stopped</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                     # 容器停止时自动重启，除非被手动停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    networks:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app-network</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                             # 将容器加入 app-network 网络</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  allinone:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    image:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youshandefeiyang/allinone</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 使用 youshandefeiyang/allinone 镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    container_name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> allinone</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                    # 容器名称为 allinone</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    privileged:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                            # 允许容器运行特权模式，提升容器权限</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    restart:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unless-stopped</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                     # 容器停止时自动重启，除非被手动停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ports:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;5101:35455&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                           # 将主机的 35455 端口映射到容器的 35455 端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    networks:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app-network</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                             # 将容器加入 app-network 网络</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  allinone_format:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    image:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yuexuangu/allinone_format:latest</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 使用 yuexuangu/allinone_format 镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    container_name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> allinone_format</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             # 容器名称为 allinone_format</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    restart:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> always</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                             # 容器停止时自动重启（始终）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ports:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;5102:35456&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                           # 将主机的 35456 端口映射到容器的 35456 端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    networks:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app-network</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                             # 将容器加入 app-network 网络</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">networks:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  app-network:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    driver:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bridge</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                              # 定义 app-network 网络为 bridge 模式</span></span></code></pre></div><p>比如上面我使用的是5101端口，部署成功后使用飞牛IP+5101,http://192.168.2.146:5101这个地址在浏览器打开访问。如果浏览器页面显示请求成功四个字就说明部署的没问题，可以正常使用。</p><p>下面以http://192.168.2.146:5101为例，列出肥羊IPTV能够提供的直播地址列表。</p><p><strong>聚合TV</strong></p><p><a href="http://192.168.2.146:5101/tv.m3u" target="_blank" rel="noreferrer">http://192.168.2.146:5101/tv.m3u</a></p><p><strong>TPTV</strong></p><p><a href="http://192.168.2.146:5101/tptv.m3u" target="_blank" rel="noreferrer">http://192.168.2.146:5101/tptv.m3u</a></p><p><strong>BiliBili 生活</strong></p><p><a href="http://192.168.2.146:5101/bililive.m3u" target="_blank" rel="noreferrer">http://192.168.2.146:5101/bililive.m3u</a></p><p><strong>虎牙一起看</strong></p><p><a href="http://192.168.2.146:5101/huyayqk.m3u" target="_blank" rel="noreferrer">http://192.168.2.146:5101/huyayqk.m3u</a></p><p><strong>斗鱼一起看</strong></p><p><a href="http://192.168.2.146:5101/douyuyqk.m3u" target="_blank" rel="noreferrer">http://192.168.2.146:5101/douyuyqk.m3u</a></p><p><strong>YY 轮播</strong></p><p><a href="http://192.168.2.146:5101/yylunbo.m3u" target="_blank" rel="noreferrer">http://192.168.2.146:5101/yylunbo.m3u</a></p><p>这些都是m3u格式的直播源，如果你的播放器或者系统需要使用txt格式的直播源。可以使用项目里面的allinone_format来解决。</p><p>allinone_format容器的访问网址是<a href="http://192.168.2.146:5102" target="_blank" rel="noreferrer">http://192.168.2.146:5102</a></p><p>allinone_format的说明文档可参考<a href="https://hub.docker.com/r/yuexuangu/allinone_format" target="_blank" rel="noreferrer">https://hub.docker.com/r/yuexuangu/allinone_format</a></p><p>这里面的直播源可以用在播放器、jellyfin、plex等软件里，具体根据你的需求来使用。</p>`,22)]))}const F=a(p,[["render",e]]);export{g as __pageData,F as default};
